# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
#jobs:
#  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    #    docker:
    #      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    #    steps:
    #      - checkout
    #      - run:
    #          name: "Say hello"
    #          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
#workflows:
#  say-hello-workflow:
#    jobs:
#      - say-hello

version: 2
jobs: # 今回は 2 つのジョブを用意し、ワークフロー機能でジョブの調整を行います。
  one: # 1 つ目のジョブ
    docker: # Docker Executor を使用します。
      - image: circleci/ruby:2.4.1 # Ruby 2.4.1 を含む Docker イメージを指定します。
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # コンテキスト/プロジェクト UI 環境変数の参照
    # ステップは、上記の Docker コンテナ内で実行するコマンドのリストです
    steps:
      - checkout # GitHub からコードをプルします
      - run: echo "A first hello" # "A first hello" を stdout に出力します
      - run: sleep 25 # 25 秒間スリープするようにジョブに指示するコマンドです。
  two: # 2 つ目のジョブ
    docker: # 前述と同様に Docker イメージ内で実行します。
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # コンテキスト/プロジェクト UI 環境変数の参照
    steps:
      - checkout
      - run: echo "A more familiar hi" # 前述のコマンドに類似した echo コマンドを実行します。
      - run: sleep 15 # 15 秒間スリープします
# このワークフローでは、マッピングを行い、上記で定義した 2 つのジョブを調整することができます。
workflows:
  version: 2
  one_and_two: # ワークフローの名前
    jobs: # 実行するジョブをここにリストします
      - one
      - two

